name: Release

on:
  push:
    tags:
      - "v*.*.*"

env:
  PNPM_HOME: ~/.local/share/pnpm

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Get tag name
        run: echo "TAG_NAME=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Setup .env
        run: |
          touch .env
          echo FIREFOX_EXT_ID="${{ secrets.FIREFOX_EXT_ID }}" >> .env
          echo AMO_JWT_ISSUER="${{ secrets.AMO_JWT_ISSUER }}" >> .env
          echo AMO_JWT_SECRET="${{ secrets.AMO_JWT_SECRET }}" >> .env
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Setup pnpm with corepack
        run: |
          corepack enable pnpm
          corepack prepare pnpm@latest --activate
          SHELL="$(which bash)" pnpm setup
          echo "${{ env.PNPM_HOME }}" >> $GITHUB_PATH
      - name: Get pnpm store path
        id: pnpm-cache
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - name: Setup pnpm store cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-
      - name: Install node dependencies
        run: pnpm i --frozen-lockfile
      - name: Build with Plasmo
        run: pnpm run build
      - name: Package with Plasmo
        run: pnpm run package
      - name: Create Release
        run: gh release create ${{ env.TAG_NAME }} ./build/chrome-mv3-prod.zip ./build/*.xpi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
